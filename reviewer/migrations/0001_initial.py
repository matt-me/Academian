# Generated by Django 2.1.5 on 2019-05-23 12:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=100)),
                ('rmp_link', models.CharField(max_length=100)),
                ('uloop_link', models.CharField(max_length=100)),
                ('last_updated', models.DateTimeField()),
                ('hit_counter', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RedditComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=10000)),
                ('children', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviewer.RedditComment')),
            ],
        ),
        migrations.CreateModel(
            name='RedditSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('text', models.CharField(max_length=10000)),
                ('children', models.ManyToManyField(to='reviewer.RedditComment')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('date', models.DateField()),
                ('source', models.CharField(max_length=20)),
                ('text_hash', models.CharField(max_length=53)),
                ('rating', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('professor_name', models.CharField(max_length=50)),
                ('reviews', models.ManyToManyField(to='reviewer.Review')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subreddit', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.ManyToManyField(to='reviewer.Professor')),
            ],
        ),
        migrations.CreateModel(
            name='ULoopReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall', models.IntegerField()),
                ('helpfulness', models.IntegerField()),
                ('clarity', models.IntegerField()),
                ('easiness', models.IntegerField()),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reviewer.Review')),
            ],
        ),
        migrations.AddField(
            model_name='professor',
            name='rating_pages',
            field=models.ManyToManyField(to='reviewer.ReviewSnapshot'),
        ),
        migrations.AddField(
            model_name='professor',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviewer.School'),
        ),
        migrations.AddField(
            model_name='professor',
            name='user_reviews',
            field=models.ManyToManyField(to='reviewer.Review'),
        ),
    ]
